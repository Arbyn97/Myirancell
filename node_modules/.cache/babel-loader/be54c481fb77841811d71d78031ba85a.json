{"ast":null,"code":"/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule columnStateHelper\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _isNil = _interopRequireDefault(require('lodash/isNil'));\n\nvar _clamp = _interopRequireDefault(require('lodash/clamp'));\n\nvar _emptyFunction = _interopRequireDefault(require('./../vendor_upstream/core/emptyFunction'));\n\nvar _columnWidths5 = _interopRequireDefault(require('./../selectors/columnWidths'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DRAG_SCROLL_SPEED = 15;\nvar DRAG_SCROLL_BUFFER = 100;\n/**\n * Initialize scrollX state\n * TODO (jordan) Audit this method for cases where deep values are not properly cloned\n *\n * @param {!Object} state\n * @param {!Object} props\n * @param {Object} oldProps\n * @return {!Object}\n */\n\nfunction initialize(state, props, oldProps) {\n  var scrollLeft = props.scrollLeft,\n      scrollToColumn = props.scrollToColumn;\n  var columnResizingData = state.columnResizingData,\n      isColumnResizing = state.isColumnResizing,\n      scrollX = state.scrollX;\n\n  if (scrollLeft !== undefined && (!oldProps || scrollLeft !== oldProps.scrollLeft)) {\n    scrollX = scrollLeft;\n  }\n\n  scrollX = scrollTo(state, props, oldProps.scrollToColumn, scrollX);\n\n  var _columnWidths = (0, _columnWidths5[\"default\"])(state),\n      maxScrollX = _columnWidths.maxScrollX;\n\n  scrollX = (0, _clamp[\"default\"])(scrollX, 0, maxScrollX); // isColumnResizing should be overwritten by value from props if available\n\n  isColumnResizing = props.isColumnResizing !== undefined ? props.isColumnResizing : isColumnResizing;\n  columnResizingData = isColumnResizing ? columnResizingData : {};\n  return _extends({}, state, {\n    columnResizingData: columnResizingData,\n    isColumnResizing: isColumnResizing,\n    maxScrollX: maxScrollX,\n    scrollX: scrollX\n  });\n}\n/**\n * @param {!Object} state\n * @param {{\n *   scrollToColumn: number,\n *   width: number,\n * }} props\n * @param {number} oldScrollToColumn\n * @param {number} scrollX\n * @return {number} The new scrollX\n */\n\n\nfunction scrollTo(state, props, oldScrollToColumn, scrollX) {\n  var scrollToColumn = props.scrollToColumn;\n\n  if ((0, _isNil[\"default\"])(scrollToColumn)) {\n    return scrollX;\n  }\n\n  var _columnWidths2 = (0, _columnWidths5[\"default\"])(state),\n      availableScrollWidth = _columnWidths2.availableScrollWidth,\n      fixedColumns = _columnWidths2.fixedColumns,\n      scrollableColumns = _columnWidths2.scrollableColumns;\n\n  var fixedColumnsCount = fixedColumns.length;\n  var scrollableColumnsCount = scrollableColumns.length;\n  var noScrollableColumns = scrollableColumnsCount === 0;\n  var scrollToUnchanged = scrollToColumn === oldScrollToColumn;\n  var selectedColumnFixed = scrollToColumn < fixedColumnsCount;\n  var selectedColumnFixedRight = scrollToColumn >= fixedColumnsCount + scrollableColumnsCount;\n\n  if (scrollToUnchanged || selectedColumnFixed || selectedColumnFixedRight || noScrollableColumns) {\n    return scrollX;\n  } // Convert column index (0 indexed) to scrollable index (0 indexed)\n  // and clamp to max scrollable index\n\n\n  var clampedColumnIndex = Math.min(scrollToColumn - fixedColumnsCount, scrollableColumns.length - 1); // Compute the width of all columns to the left of the column\n\n  var previousWidth = 0;\n\n  for (var columnIdx = 0; columnIdx < clampedColumnIndex; ++columnIdx) {\n    previousWidth += scrollableColumns[columnIdx].width;\n  } // Get width of specified column\n\n\n  var selectedColumnWidth = scrollableColumns[clampedColumnIndex].width; // Compute the scroll position which sets the column on the right of the viewport\n  // Must scroll at least far enough for end of column (previousWidth + selectedColumnWidth)\n  // to be in viewport.\n\n  var minScrollPosition = previousWidth + selectedColumnWidth - availableScrollWidth; // Handle offscreen to the left\n  // If scrolled less than minimum amount, scroll to minimum amount\n  // so column on right of viewport\n\n  if (scrollX < minScrollPosition) {\n    return minScrollPosition;\n  } // Handle offscreen to the right\n  // If scrolled more than previous columns, at least part of column will be offscreen to left\n  // Scroll so column is flush with left edge of viewport\n\n\n  if (scrollX > previousWidth) {\n    return previousWidth;\n  }\n\n  return scrollX;\n}\n/**\n * This is called when a cell that is in the header of a column has its\n * resizer knob clicked on. It displays the resizer and puts in the correct\n * location on the table.\n */\n\n\nfunction resizeColumn(state, resizeData) {\n  var cellMinWidth = resizeData.cellMinWidth,\n      cellMaxWidth = resizeData.cellMaxWidth,\n      cellWidth = resizeData.cellWidth,\n      columnKey = resizeData.columnKey,\n      combinedWidth = resizeData.combinedWidth,\n      clientX = resizeData.clientX,\n      clientY = resizeData.clientY,\n      leftOffset = resizeData.leftOffset;\n  return _extends({}, state, {\n    isColumnResizing: true,\n    columnResizingData: {\n      left: leftOffset + combinedWidth - cellWidth,\n      width: cellWidth,\n      minWidth: cellMinWidth,\n      maxWidth: cellMaxWidth,\n      initialEvent: {\n        clientX: clientX,\n        clientY: clientY,\n        preventDefault: _emptyFunction[\"default\"]\n      },\n      key: columnKey\n    }\n  });\n}\n\nfunction reorderColumn(state, reorderData) {\n  var columnKey = reorderData.columnKey,\n      left = reorderData.left,\n      scrollStart = reorderData.scrollStart,\n      width = reorderData.width;\n\n  var _columnWidths3 = (0, _columnWidths5[\"default\"])(state),\n      fixedColumns = _columnWidths3.fixedColumns;\n\n  var isFixed = fixedColumns.some(function (column) {\n    return column.columnKey === columnKey;\n  });\n  return _extends({}, state, {\n    isColumnReordering: true,\n    columnReorderingData: {\n      cancelReorder: false,\n      dragDistance: 0,\n      isFixed: isFixed,\n      scrollStart: scrollStart,\n      columnKey: columnKey,\n      columnWidth: width,\n      originalLeft: left,\n      columnBefore: undefined,\n      columnAfter: undefined\n    }\n  });\n}\n\nfunction reorderColumnMove(state, deltaX) {\n  var _state$columnReorderi = state.columnReorderingData,\n      isFixed = _state$columnReorderi.isFixed,\n      originalLeft = _state$columnReorderi.originalLeft,\n      scrollStart = _state$columnReorderi.scrollStart;\n  var maxScrollX = state.maxScrollX,\n      scrollX = state.scrollX;\n\n  if (!isFixed) {\n    // Relative dragX position on scroll\n    var dragX = originalLeft - scrollStart + deltaX;\n\n    var _columnWidths4 = (0, _columnWidths5[\"default\"])(state),\n        availableScrollWidth = _columnWidths4.availableScrollWidth;\n\n    deltaX += scrollX - scrollStart; // Scroll the table left or right if we drag near the edges of the table\n\n    if (dragX > availableScrollWidth - DRAG_SCROLL_BUFFER) {\n      scrollX = Math.min(scrollX + DRAG_SCROLL_SPEED, maxScrollX);\n    } else if (dragX <= DRAG_SCROLL_BUFFER) {\n      scrollX = Math.max(scrollX - DRAG_SCROLL_SPEED, 0);\n    }\n  } // NOTE (jordan) Need to clone this object when use pureRendering\n\n\n  var reorderingData = _extends({}, state.columnReorderingData, {\n    dragDistance: deltaX,\n    columnBefore: undefined,\n    columnAfter: undefined\n  });\n\n  return _extends({}, state, {\n    scrollX: scrollX,\n    columnReorderingData: reorderingData\n  });\n}\n\nvar _default = {\n  initialize: initialize,\n  reorderColumn: reorderColumn,\n  reorderColumnMove: reorderColumnMove,\n  resizeColumn: resizeColumn\n};\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","_isNil","_interopRequireDefault","require","_clamp","_emptyFunction","_columnWidths5","obj","__esModule","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","DRAG_SCROLL_SPEED","DRAG_SCROLL_BUFFER","initialize","state","props","oldProps","scrollLeft","scrollToColumn","columnResizingData","isColumnResizing","scrollX","undefined","scrollTo","_columnWidths","maxScrollX","oldScrollToColumn","_columnWidths2","availableScrollWidth","fixedColumns","scrollableColumns","fixedColumnsCount","scrollableColumnsCount","noScrollableColumns","scrollToUnchanged","selectedColumnFixed","selectedColumnFixedRight","clampedColumnIndex","Math","min","previousWidth","columnIdx","width","selectedColumnWidth","minScrollPosition","resizeColumn","resizeData","cellMinWidth","cellMaxWidth","cellWidth","columnKey","combinedWidth","clientX","clientY","leftOffset","left","minWidth","maxWidth","initialEvent","preventDefault","reorderColumn","reorderData","scrollStart","_columnWidths3","isFixed","some","column","isColumnReordering","columnReorderingData","cancelReorder","dragDistance","columnWidth","originalLeft","columnBefore","columnAfter","reorderColumnMove","deltaX","_state$columnReorderi","dragX","_columnWidths4","max","reorderingData","_default"],"sources":["D:/myirancell/myirancell/node_modules/fixed-data-table-2/internal/reducers/columnStateHelper.js"],"sourcesContent":["/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule columnStateHelper\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _isNil = _interopRequireDefault(require('lodash/isNil'));\n\nvar _clamp = _interopRequireDefault(require('lodash/clamp'));\n\nvar _emptyFunction = _interopRequireDefault(require('./../vendor_upstream/core/emptyFunction'));\n\nvar _columnWidths5 = _interopRequireDefault(require('./../selectors/columnWidths'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar DRAG_SCROLL_SPEED = 15;\nvar DRAG_SCROLL_BUFFER = 100;\n/**\n * Initialize scrollX state\n * TODO (jordan) Audit this method for cases where deep values are not properly cloned\n *\n * @param {!Object} state\n * @param {!Object} props\n * @param {Object} oldProps\n * @return {!Object}\n */\n\nfunction initialize(state, props, oldProps) {\n  var scrollLeft = props.scrollLeft,\n      scrollToColumn = props.scrollToColumn;\n  var columnResizingData = state.columnResizingData,\n      isColumnResizing = state.isColumnResizing,\n      scrollX = state.scrollX;\n\n  if (scrollLeft !== undefined && (!oldProps || scrollLeft !== oldProps.scrollLeft)) {\n    scrollX = scrollLeft;\n  }\n\n  scrollX = scrollTo(state, props, oldProps.scrollToColumn, scrollX);\n\n  var _columnWidths = (0, _columnWidths5[\"default\"])(state),\n      maxScrollX = _columnWidths.maxScrollX;\n\n  scrollX = (0, _clamp[\"default\"])(scrollX, 0, maxScrollX); // isColumnResizing should be overwritten by value from props if available\n\n  isColumnResizing = props.isColumnResizing !== undefined ? props.isColumnResizing : isColumnResizing;\n  columnResizingData = isColumnResizing ? columnResizingData : {};\n  return _extends({}, state, {\n    columnResizingData: columnResizingData,\n    isColumnResizing: isColumnResizing,\n    maxScrollX: maxScrollX,\n    scrollX: scrollX\n  });\n}\n/**\n * @param {!Object} state\n * @param {{\n *   scrollToColumn: number,\n *   width: number,\n * }} props\n * @param {number} oldScrollToColumn\n * @param {number} scrollX\n * @return {number} The new scrollX\n */\n\n\nfunction scrollTo(state, props, oldScrollToColumn, scrollX) {\n  var scrollToColumn = props.scrollToColumn;\n\n  if ((0, _isNil[\"default\"])(scrollToColumn)) {\n    return scrollX;\n  }\n\n  var _columnWidths2 = (0, _columnWidths5[\"default\"])(state),\n      availableScrollWidth = _columnWidths2.availableScrollWidth,\n      fixedColumns = _columnWidths2.fixedColumns,\n      scrollableColumns = _columnWidths2.scrollableColumns;\n\n  var fixedColumnsCount = fixedColumns.length;\n  var scrollableColumnsCount = scrollableColumns.length;\n  var noScrollableColumns = scrollableColumnsCount === 0;\n  var scrollToUnchanged = scrollToColumn === oldScrollToColumn;\n  var selectedColumnFixed = scrollToColumn < fixedColumnsCount;\n  var selectedColumnFixedRight = scrollToColumn >= fixedColumnsCount + scrollableColumnsCount;\n\n  if (scrollToUnchanged || selectedColumnFixed || selectedColumnFixedRight || noScrollableColumns) {\n    return scrollX;\n  } // Convert column index (0 indexed) to scrollable index (0 indexed)\n  // and clamp to max scrollable index\n\n\n  var clampedColumnIndex = Math.min(scrollToColumn - fixedColumnsCount, scrollableColumns.length - 1); // Compute the width of all columns to the left of the column\n\n  var previousWidth = 0;\n\n  for (var columnIdx = 0; columnIdx < clampedColumnIndex; ++columnIdx) {\n    previousWidth += scrollableColumns[columnIdx].width;\n  } // Get width of specified column\n\n\n  var selectedColumnWidth = scrollableColumns[clampedColumnIndex].width; // Compute the scroll position which sets the column on the right of the viewport\n  // Must scroll at least far enough for end of column (previousWidth + selectedColumnWidth)\n  // to be in viewport.\n\n  var minScrollPosition = previousWidth + selectedColumnWidth - availableScrollWidth; // Handle offscreen to the left\n  // If scrolled less than minimum amount, scroll to minimum amount\n  // so column on right of viewport\n\n  if (scrollX < minScrollPosition) {\n    return minScrollPosition;\n  } // Handle offscreen to the right\n  // If scrolled more than previous columns, at least part of column will be offscreen to left\n  // Scroll so column is flush with left edge of viewport\n\n\n  if (scrollX > previousWidth) {\n    return previousWidth;\n  }\n\n  return scrollX;\n}\n/**\n * This is called when a cell that is in the header of a column has its\n * resizer knob clicked on. It displays the resizer and puts in the correct\n * location on the table.\n */\n\n\nfunction resizeColumn(state, resizeData) {\n  var cellMinWidth = resizeData.cellMinWidth,\n      cellMaxWidth = resizeData.cellMaxWidth,\n      cellWidth = resizeData.cellWidth,\n      columnKey = resizeData.columnKey,\n      combinedWidth = resizeData.combinedWidth,\n      clientX = resizeData.clientX,\n      clientY = resizeData.clientY,\n      leftOffset = resizeData.leftOffset;\n  return _extends({}, state, {\n    isColumnResizing: true,\n    columnResizingData: {\n      left: leftOffset + combinedWidth - cellWidth,\n      width: cellWidth,\n      minWidth: cellMinWidth,\n      maxWidth: cellMaxWidth,\n      initialEvent: {\n        clientX: clientX,\n        clientY: clientY,\n        preventDefault: _emptyFunction[\"default\"]\n      },\n      key: columnKey\n    }\n  });\n}\n\nfunction reorderColumn(state, reorderData) {\n  var columnKey = reorderData.columnKey,\n      left = reorderData.left,\n      scrollStart = reorderData.scrollStart,\n      width = reorderData.width;\n\n  var _columnWidths3 = (0, _columnWidths5[\"default\"])(state),\n      fixedColumns = _columnWidths3.fixedColumns;\n\n  var isFixed = fixedColumns.some(function (column) {\n    return column.columnKey === columnKey;\n  });\n  return _extends({}, state, {\n    isColumnReordering: true,\n    columnReorderingData: {\n      cancelReorder: false,\n      dragDistance: 0,\n      isFixed: isFixed,\n      scrollStart: scrollStart,\n      columnKey: columnKey,\n      columnWidth: width,\n      originalLeft: left,\n      columnBefore: undefined,\n      columnAfter: undefined\n    }\n  });\n}\n\nfunction reorderColumnMove(state, deltaX) {\n  var _state$columnReorderi = state.columnReorderingData,\n      isFixed = _state$columnReorderi.isFixed,\n      originalLeft = _state$columnReorderi.originalLeft,\n      scrollStart = _state$columnReorderi.scrollStart;\n  var maxScrollX = state.maxScrollX,\n      scrollX = state.scrollX;\n\n  if (!isFixed) {\n    // Relative dragX position on scroll\n    var dragX = originalLeft - scrollStart + deltaX;\n\n    var _columnWidths4 = (0, _columnWidths5[\"default\"])(state),\n        availableScrollWidth = _columnWidths4.availableScrollWidth;\n\n    deltaX += scrollX - scrollStart; // Scroll the table left or right if we drag near the edges of the table\n\n    if (dragX > availableScrollWidth - DRAG_SCROLL_BUFFER) {\n      scrollX = Math.min(scrollX + DRAG_SCROLL_SPEED, maxScrollX);\n    } else if (dragX <= DRAG_SCROLL_BUFFER) {\n      scrollX = Math.max(scrollX - DRAG_SCROLL_SPEED, 0);\n    }\n  } // NOTE (jordan) Need to clone this object when use pureRendering\n\n\n  var reorderingData = _extends({}, state.columnReorderingData, {\n    dragDistance: deltaX,\n    columnBefore: undefined,\n    columnAfter: undefined\n  });\n\n  return _extends({}, state, {\n    scrollX: scrollX,\n    columnReorderingData: reorderingData\n  });\n}\n\nvar _default = {\n  initialize: initialize,\n  reorderColumn: reorderColumn,\n  reorderColumnMove: reorderColumnMove,\n  resizeColumn: resizeColumn\n};\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}